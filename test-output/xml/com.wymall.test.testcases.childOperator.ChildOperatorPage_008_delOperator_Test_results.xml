<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Role"
           tests="1"
           failures="1"
           errors="0"
           skipped="0"
           time="4.917">
  <properties />
            <testcase name="delOperator" time="4.917" classname="com.wymall.test.testcases.childOperator.ChildOperatorPage_008_delOperator_Test">
                <failure type="java.lang.AssertionError"
                  message="期望的文字是 [删除成功] 但是找到了 [系统异常]"
              >
<![CDATA[java.lang.AssertionError: 期望的文字是 [删除成功] 但是找到了 [系统异常]
  org.testng.Assert.fail(Assert.java:94)
  com.wymall.test.utils.SeleniumUtil.isTextCorrect(SeleniumUtil.java:332)
  com.wymall.test.utils.actions.impl.CheckTipsText.doAction(CheckTipsText.java:23)
  com.wymall.test.utils.SuperAction.parseExcel(SuperAction.java:271)
  com.wymall.test.testcases.childOperator.ChildOperatorPage_008_delOperator_Test.delOperator(ChildOperatorPage_008_delOperator_Test.java:8)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
  java.lang.reflect.Method.invoke(Unknown Source)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
  org.testng.TestRunner.privateRun(TestRunner.java:767)
  org.testng.TestRunner.run(TestRunner.java:617)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:335)
  org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
  org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:369)
  org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
  java.util.concurrent.FutureTask.run(Unknown Source)
  java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
  java.lang.Thread.run(Unknown Source)
]]>
      </failure>

          </testcase>
  
  
  
</testsuite>
